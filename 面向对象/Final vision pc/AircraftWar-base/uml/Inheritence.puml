@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward()
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY)
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish()
}

abstract class AbstractAircraft
{
	# axHp:int
    # hp:int
    # direction:int
    # shoot_freq:int
    - shootStrategy:ShootStrategy
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
    + decreaseHp(int decrease)
    + getHp():int
    + shoot():List<BaseBullet>
    + getdirection():int
    + setShootStrategy(ShootStrategy shootStrategy)
 }

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward()
    + update()
	+ getPower():int
}



AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- AbstractProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- AbstractEnemy
AbstractEnemy <|-- MobEnemy
AbstractEnemy <|-- EliteEnemy
AbstractEnemy <|-- BossEnemy


BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

AbstractProp  <|-- BloodProp
AbstractProp  <|-- BombProp
AbstractProp <|-- BulletProp

class HeroAircraft {
    - {static} heroAircraft:HeroAircraft
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
    + forward()
    + {static} getHeroAircraft():HeroAircraft
}


abstract  class AbstractEnemy{
- getPropStrategy:GetPropStrategy
+ AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
+ setGetPropStrategy(GetPropStrategy getPropStrategy)
}

class BossEnemy{
+ BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ update()
}

class EliteEnemy{
+ EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ shoot():List<BaseBullet>
+ forward()
+ update()
}

class MobEnemy{
+ MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ forward()
+ update()
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
}


abstract class AbstractProp{
 + AbstractProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + addMember(Exploed exploed)
 + {abstract} effect(HeroAircraft heroAircraft)
}

class BloodProp{
 + BloodProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + effect(HeroAircraft heroAircraft)
}

class BombProp{
 - exploedthings: List<Exploed>
 + BombProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + addMember(Exploed exploed)
 + effect(HeroAircraft heroAircraft)
}

class BulletProp{
 - cnt :int
 - thread : Thread
 - lathread : Thread
 + BulletProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + setCnt(int cnt)
 + setThread(Thread thread)
 + effect(HeroAircraft heroAircraft)
 + getThread():Thread
}


class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
    + update()
}


HeroAircraft<--HeroAircraft
HeroAircraft<--Game
@enduml