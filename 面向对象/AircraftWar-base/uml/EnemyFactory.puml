@startuml
'https://plantuml.com/class-diagram


interface EnemyFactory{
+createEnemy(double Strong,int shoot_freq):AbstractEnemy
}
class BossFactory{
- seed:double
+ createEnemy(double Strong,int shoot_freq):AbstractEnemy
}

class EliteFactory{
- seed:double
+ createEnemy(double Strong,int shoot_freq):AbstractEnemy
}
class MobFactory{
 +createEnemy(double Strong,int shoot_freq):AbstractEnemy
}

abstract  class AbstractEnemy{
- getPropStrategy:GetPropStrategy
+ AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
}

class BossEnemy{
+ BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ update()
}

class EliteEnemy{
+ EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ shoot():List<BaseBullet>
+ forward()
+ update()
}

class MobEnemy{
+ MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ forward()
+ update()
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
}

EnemyFactoryDemo .up.> EnemyFactory
EnemyFactoryDemo .down.> AbstractEnemy
MobFactory ..|> EnemyFactory
EliteFactory ..|> EnemyFactory
BossFactory ..|>  EnemyFactory

AbstractEnemy  <|-- MobEnemy
AbstractEnemy  <|-- EliteEnemy
AbstractEnemy <|-- BossEnemy

MobFactory ..> MobEnemy : create
EliteFactory ..> EliteEnemy : create
BossFactory ..> EliteEnemy:create
@enduml