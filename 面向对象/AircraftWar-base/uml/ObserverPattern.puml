@startuml
'https://plantuml.com/class-diagram

abstract  class AbstractEnemy{
- getPropStrategy:GetPropStrategy
+ AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
+ setGetPropStrategy(GetPropStrategy getPropStrategy)
}


class BossEnemy{
+ BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ update()
}


class EliteEnemy{
+ EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ shoot():List<BaseBullet>
+ forward()
+ update()
}


class MobEnemy{
+ MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shoot_freq)
+ forward()
+ update()
+ shoot():List<BaseBullet>
+ getProp():AbstractProp
}


abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward()
    + update()
	+ getPower():int
}


class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
    + update()
}


interface Exploed{
   + update()
}

class BombProp{
 - exploedthings: List<Exploed>
 + BombProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + addMember(Exploed exploed)
 + effect(HeroAircraft heroAircraft)
}

BaseBullet <|-- EnemyBullet
AbstractEnemy <|-- MobEnemy
AbstractEnemy <|-- EliteEnemy
AbstractEnemy <|-- BossEnemy
BombProp o-down-> Exploed
BaseBullet .up.|> Exploed
AbstractEnemy .up.|> Exploed
@enduml