@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward()
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY)
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish()
}
abstract class AbstractAircraft
{
	# axHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease)
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward()
	+ getPower():int
}



AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- GameProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- FatherEnemy
FatherEnemy <|-- MobEnemy
FatherEnemy <|-- EliteEnemy
FatherEnemy <|-- BossEnemy


BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

GameProp  <|-- BloodProp
GameProp  <|-- BombProp
GameProp  <|-- BulletProp

class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    - {static} heroAircraft:HeroAircraft
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward()
    + shoot():List<BaseBullet>
    + {static} getHeroAircraft():HeroAircraft

}

abstract  class FatherEnemy{
-randtype:int
+ FatherEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ shoot():List<BaseBullet>
+ {protected} getPropFactory():PropFactory
+ getProp():GameProp
}



class BossEnemy{
- shootNum:int
- power:int
- direction:int
+ BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward()
+ shoot():List<BaseBullet>
+ getProp():GameProp
}

class EliteEnemy{
- shootNum:int
- power:int
- direction:int
+ EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward()
+ shoot():List<BaseBullet>
+ getProp():GameProp
}
class MobEnemy{
+ MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
+ forward()
+ shoot():List<BaseBullet>
+ getProp():GameProp
}


abstract class GameProp{
 + GameProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + {abstract} effect(HeroAircraft heroAircraft)
}

class BloodProp{
 + BloodProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + effect(HeroAircraft heroAircraft)
}

class BombProp{
 + BombProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + effect(HeroAircraft heroAircraft)
}

class BulletProp{
 + BulletProp(int locationX, int locationY, int speedX, int speedY)
 + forward()
 + effect(HeroAircraft heroAircraft)
}


class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}


HeroAircraft<--HeroAircraft
HeroAircraft<--Game
@enduml